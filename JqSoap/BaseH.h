/* BaseH.h
   Generated by gSOAP 2.8.10 from BaseInterface.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef BaseH_H
#define BaseH_H
#include "BaseStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 Base_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 Base_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 Base_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_begin_send(soap) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( soap_begin_recv(soap) || !soap_get_long(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedLong
#define SOAP_TYPE_unsignedLong (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLong(struct soap*, unsigned long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLong(struct soap*, const char*, int, const unsigned long *, const char*);
SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_in_unsignedLong(struct soap*, const char*, unsigned long *, const char*);

#ifndef soap_write_unsignedLong
#define soap_write_unsignedLong(soap, data) ( soap_begin_send(soap) || soap_put_unsignedLong(soap, data, "unsignedLong", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLong(struct soap*, const unsigned long *, const char*, const char*);

#ifndef soap_read_unsignedLong
#define soap_read_unsignedLong(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLong(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_get_unsignedLong(struct soap*, unsigned long *, const char*, const char*);

#ifndef SOAP_TYPE_nsCXF__getDataCxfResponse
#define SOAP_TYPE_nsCXF__getDataCxfResponse (81)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_nsCXF__getDataCxfResponse(struct soap*, const char*, int, const nsCXF__getDataCxfResponse *, const char*);
SOAP_FMAC3 nsCXF__getDataCxfResponse * SOAP_FMAC4 soap_in_nsCXF__getDataCxfResponse(struct soap*, const char*, nsCXF__getDataCxfResponse *, const char*);

#ifndef soap_write_nsCXF__getDataCxfResponse
#define soap_write_nsCXF__getDataCxfResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "nsCXF:getDataCxfResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_nsCXF__getDataCxfResponse
#define soap_read_nsCXF__getDataCxfResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_nsCXF__getDataCxfResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 nsCXF__getDataCxfResponse * SOAP_FMAC4 soap_get_nsCXF__getDataCxfResponse(struct soap*, nsCXF__getDataCxfResponse *, const char*, const char*);

#define soap_new_nsCXF__getDataCxfResponse(soap, n) soap_instantiate_nsCXF__getDataCxfResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_nsCXF__getDataCxfResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 nsCXF__getDataCxfResponse * SOAP_FMAC2 soap_instantiate_nsCXF__getDataCxfResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_nsCXF__getDataCxfResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_nsCXF__getDataCxf
#define SOAP_TYPE_nsCXF__getDataCxf (80)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_nsCXF__getDataCxf(struct soap*, const char*, int, const nsCXF__getDataCxf *, const char*);
SOAP_FMAC3 nsCXF__getDataCxf * SOAP_FMAC4 soap_in_nsCXF__getDataCxf(struct soap*, const char*, nsCXF__getDataCxf *, const char*);

#ifndef soap_write_nsCXF__getDataCxf
#define soap_write_nsCXF__getDataCxf(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "nsCXF:getDataCxf", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_nsCXF__getDataCxf
#define soap_read_nsCXF__getDataCxf(soap, data) ( soap_begin_recv(soap) || !soap_get_nsCXF__getDataCxf(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 nsCXF__getDataCxf * SOAP_FMAC4 soap_get_nsCXF__getDataCxf(struct soap*, nsCXF__getDataCxf *, const char*, const char*);

#define soap_new_nsCXF__getDataCxf(soap, n) soap_instantiate_nsCXF__getDataCxf(soap, n, NULL, NULL, NULL)


#define soap_delete_nsCXF__getDataCxf(soap, p) soap_delete(soap, p)

SOAP_FMAC1 nsCXF__getDataCxf * SOAP_FMAC2 soap_instantiate_nsCXF__getDataCxf(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_nsCXF__getDataCxf(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getDataResponse
#define SOAP_TYPE__ns1__getDataResponse (73)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getDataResponse(struct soap*, const char*, int, const _ns1__getDataResponse *, const char*);
SOAP_FMAC3 _ns1__getDataResponse * SOAP_FMAC4 soap_in__ns1__getDataResponse(struct soap*, const char*, _ns1__getDataResponse *, const char*);

#ifndef soap_write__ns1__getDataResponse
#define soap_write__ns1__getDataResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getDataResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getDataResponse
#define soap_read__ns1__getDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getDataResponse * SOAP_FMAC4 soap_get__ns1__getDataResponse(struct soap*, _ns1__getDataResponse *, const char*, const char*);

#define soap_new__ns1__getDataResponse(soap, n) soap_instantiate__ns1__getDataResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getDataResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getDataResponse * SOAP_FMAC2 soap_instantiate__ns1__getDataResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__getData
#define SOAP_TYPE__ns1__getData (72)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__getData(struct soap*, const char*, int, const _ns1__getData *, const char*);
SOAP_FMAC3 _ns1__getData * SOAP_FMAC4 soap_in__ns1__getData(struct soap*, const char*, _ns1__getData *, const char*);

#ifndef soap_write__ns1__getData
#define soap_write__ns1__getData(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:getData", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__getData
#define soap_read__ns1__getData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__getData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getData * SOAP_FMAC4 soap_get__ns1__getData(struct soap*, _ns1__getData *, const char*, const char*);

#define soap_new__ns1__getData(soap, n) soap_instantiate__ns1__getData(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__getData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__getData * SOAP_FMAC2 soap_instantiate__ns1__getData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__getData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___nsCXF__getDataCxf
#define SOAP_TYPE___nsCXF__getDataCxf (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nsCXF__getDataCxf(struct soap*, struct __nsCXF__getDataCxf *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nsCXF__getDataCxf(struct soap*, const struct __nsCXF__getDataCxf *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nsCXF__getDataCxf(struct soap*, const char*, int, const struct __nsCXF__getDataCxf *, const char*);
SOAP_FMAC3 struct __nsCXF__getDataCxf * SOAP_FMAC4 soap_in___nsCXF__getDataCxf(struct soap*, const char*, struct __nsCXF__getDataCxf *, const char*);

#ifndef soap_write___nsCXF__getDataCxf
#define soap_write___nsCXF__getDataCxf(soap, data) ( soap_begin_send(soap) || (soap_serialize___nsCXF__getDataCxf(soap, data), 0) || soap_put___nsCXF__getDataCxf(soap, data, "-nsCXF:getDataCxf", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nsCXF__getDataCxf(struct soap*, const struct __nsCXF__getDataCxf *, const char*, const char*);

#ifndef soap_read___nsCXF__getDataCxf
#define soap_read___nsCXF__getDataCxf(soap, data) ( soap_begin_recv(soap) || !soap_get___nsCXF__getDataCxf(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __nsCXF__getDataCxf * SOAP_FMAC4 soap_get___nsCXF__getDataCxf(struct soap*, struct __nsCXF__getDataCxf *, const char*, const char*);

#define soap_new___nsCXF__getDataCxf(soap, n) soap_instantiate___nsCXF__getDataCxf(soap, n, NULL, NULL, NULL)


#define soap_delete___nsCXF__getDataCxf(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nsCXF__getDataCxf * SOAP_FMAC2 soap_instantiate___nsCXF__getDataCxf(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nsCXF__getDataCxf(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getData
#define SOAP_TYPE___ns1__getData (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getData(struct soap*, struct __ns1__getData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getData(struct soap*, const struct __ns1__getData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getData(struct soap*, const char*, int, const struct __ns1__getData *, const char*);
SOAP_FMAC3 struct __ns1__getData * SOAP_FMAC4 soap_in___ns1__getData(struct soap*, const char*, struct __ns1__getData *, const char*);

#ifndef soap_write___ns1__getData
#define soap_write___ns1__getData(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__getData(soap, data), 0) || soap_put___ns1__getData(soap, data, "-ns1:getData", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getData(struct soap*, const struct __ns1__getData *, const char*, const char*);

#ifndef soap_read___ns1__getData
#define soap_read___ns1__getData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__getData * SOAP_FMAC4 soap_get___ns1__getData(struct soap*, struct __ns1__getData *, const char*, const char*);

#define soap_new___ns1__getData(soap, n) soap_instantiate___ns1__getData(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__getData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__getData * SOAP_FMAC2 soap_instantiate___ns1__getData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__CtrlVideoRecord
#define SOAP_TYPE_ns__CtrlVideoRecord (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__CtrlVideoRecord(struct soap*, struct ns__CtrlVideoRecord *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__CtrlVideoRecord(struct soap*, const struct ns__CtrlVideoRecord *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__CtrlVideoRecord(struct soap*, const char*, int, const struct ns__CtrlVideoRecord *, const char*);
SOAP_FMAC3 struct ns__CtrlVideoRecord * SOAP_FMAC4 soap_in_ns__CtrlVideoRecord(struct soap*, const char*, struct ns__CtrlVideoRecord *, const char*);

#ifndef soap_write_ns__CtrlVideoRecord
#define soap_write_ns__CtrlVideoRecord(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__CtrlVideoRecord(soap, data), 0) || soap_put_ns__CtrlVideoRecord(soap, data, "ns:CtrlVideoRecord", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__CtrlVideoRecord(struct soap*, const struct ns__CtrlVideoRecord *, const char*, const char*);

#ifndef soap_read_ns__CtrlVideoRecord
#define soap_read_ns__CtrlVideoRecord(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__CtrlVideoRecord(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__CtrlVideoRecord * SOAP_FMAC4 soap_get_ns__CtrlVideoRecord(struct soap*, struct ns__CtrlVideoRecord *, const char*, const char*);

#define soap_new_ns__CtrlVideoRecord(soap, n) soap_instantiate_ns__CtrlVideoRecord(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__CtrlVideoRecord(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__CtrlVideoRecord * SOAP_FMAC2 soap_instantiate_ns__CtrlVideoRecord(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__CtrlVideoRecord(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__AbandonVideoDownSIP
#define SOAP_TYPE_ns__AbandonVideoDownSIP (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__AbandonVideoDownSIP(struct soap*, struct ns__AbandonVideoDownSIP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__AbandonVideoDownSIP(struct soap*, const struct ns__AbandonVideoDownSIP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__AbandonVideoDownSIP(struct soap*, const char*, int, const struct ns__AbandonVideoDownSIP *, const char*);
SOAP_FMAC3 struct ns__AbandonVideoDownSIP * SOAP_FMAC4 soap_in_ns__AbandonVideoDownSIP(struct soap*, const char*, struct ns__AbandonVideoDownSIP *, const char*);

#ifndef soap_write_ns__AbandonVideoDownSIP
#define soap_write_ns__AbandonVideoDownSIP(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__AbandonVideoDownSIP(soap, data), 0) || soap_put_ns__AbandonVideoDownSIP(soap, data, "ns:AbandonVideoDownSIP", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__AbandonVideoDownSIP(struct soap*, const struct ns__AbandonVideoDownSIP *, const char*, const char*);

#ifndef soap_read_ns__AbandonVideoDownSIP
#define soap_read_ns__AbandonVideoDownSIP(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__AbandonVideoDownSIP(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__AbandonVideoDownSIP * SOAP_FMAC4 soap_get_ns__AbandonVideoDownSIP(struct soap*, struct ns__AbandonVideoDownSIP *, const char*, const char*);

#define soap_new_ns__AbandonVideoDownSIP(soap, n) soap_instantiate_ns__AbandonVideoDownSIP(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__AbandonVideoDownSIP(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__AbandonVideoDownSIP * SOAP_FMAC2 soap_instantiate_ns__AbandonVideoDownSIP(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__AbandonVideoDownSIP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__AbandonVideoRecordSIP
#define SOAP_TYPE_ns__AbandonVideoRecordSIP (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__AbandonVideoRecordSIP(struct soap*, struct ns__AbandonVideoRecordSIP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__AbandonVideoRecordSIP(struct soap*, const struct ns__AbandonVideoRecordSIP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__AbandonVideoRecordSIP(struct soap*, const char*, int, const struct ns__AbandonVideoRecordSIP *, const char*);
SOAP_FMAC3 struct ns__AbandonVideoRecordSIP * SOAP_FMAC4 soap_in_ns__AbandonVideoRecordSIP(struct soap*, const char*, struct ns__AbandonVideoRecordSIP *, const char*);

#ifndef soap_write_ns__AbandonVideoRecordSIP
#define soap_write_ns__AbandonVideoRecordSIP(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__AbandonVideoRecordSIP(soap, data), 0) || soap_put_ns__AbandonVideoRecordSIP(soap, data, "ns:AbandonVideoRecordSIP", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__AbandonVideoRecordSIP(struct soap*, const struct ns__AbandonVideoRecordSIP *, const char*, const char*);

#ifndef soap_read_ns__AbandonVideoRecordSIP
#define soap_read_ns__AbandonVideoRecordSIP(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__AbandonVideoRecordSIP(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__AbandonVideoRecordSIP * SOAP_FMAC4 soap_get_ns__AbandonVideoRecordSIP(struct soap*, struct ns__AbandonVideoRecordSIP *, const char*, const char*);

#define soap_new_ns__AbandonVideoRecordSIP(soap, n) soap_instantiate_ns__AbandonVideoRecordSIP(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__AbandonVideoRecordSIP(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__AbandonVideoRecordSIP * SOAP_FMAC2 soap_instantiate_ns__AbandonVideoRecordSIP(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__AbandonVideoRecordSIP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DownloadVideoRecordSIP
#define SOAP_TYPE_ns__DownloadVideoRecordSIP (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DownloadVideoRecordSIP(struct soap*, struct ns__DownloadVideoRecordSIP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DownloadVideoRecordSIP(struct soap*, const struct ns__DownloadVideoRecordSIP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DownloadVideoRecordSIP(struct soap*, const char*, int, const struct ns__DownloadVideoRecordSIP *, const char*);
SOAP_FMAC3 struct ns__DownloadVideoRecordSIP * SOAP_FMAC4 soap_in_ns__DownloadVideoRecordSIP(struct soap*, const char*, struct ns__DownloadVideoRecordSIP *, const char*);

#ifndef soap_write_ns__DownloadVideoRecordSIP
#define soap_write_ns__DownloadVideoRecordSIP(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__DownloadVideoRecordSIP(soap, data), 0) || soap_put_ns__DownloadVideoRecordSIP(soap, data, "ns:DownloadVideoRecordSIP", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DownloadVideoRecordSIP(struct soap*, const struct ns__DownloadVideoRecordSIP *, const char*, const char*);

#ifndef soap_read_ns__DownloadVideoRecordSIP
#define soap_read_ns__DownloadVideoRecordSIP(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DownloadVideoRecordSIP(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__DownloadVideoRecordSIP * SOAP_FMAC4 soap_get_ns__DownloadVideoRecordSIP(struct soap*, struct ns__DownloadVideoRecordSIP *, const char*, const char*);

#define soap_new_ns__DownloadVideoRecordSIP(soap, n) soap_instantiate_ns__DownloadVideoRecordSIP(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__DownloadVideoRecordSIP(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__DownloadVideoRecordSIP * SOAP_FMAC2 soap_instantiate_ns__DownloadVideoRecordSIP(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DownloadVideoRecordSIP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DownloadVideoRecordSIPResponse
#define SOAP_TYPE_ns__DownloadVideoRecordSIPResponse (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DownloadVideoRecordSIPResponse(struct soap*, struct ns__DownloadVideoRecordSIPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DownloadVideoRecordSIPResponse(struct soap*, const struct ns__DownloadVideoRecordSIPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DownloadVideoRecordSIPResponse(struct soap*, const char*, int, const struct ns__DownloadVideoRecordSIPResponse *, const char*);
SOAP_FMAC3 struct ns__DownloadVideoRecordSIPResponse * SOAP_FMAC4 soap_in_ns__DownloadVideoRecordSIPResponse(struct soap*, const char*, struct ns__DownloadVideoRecordSIPResponse *, const char*);

#ifndef soap_write_ns__DownloadVideoRecordSIPResponse
#define soap_write_ns__DownloadVideoRecordSIPResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__DownloadVideoRecordSIPResponse(soap, data), 0) || soap_put_ns__DownloadVideoRecordSIPResponse(soap, data, "ns:DownloadVideoRecordSIPResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DownloadVideoRecordSIPResponse(struct soap*, const struct ns__DownloadVideoRecordSIPResponse *, const char*, const char*);

#ifndef soap_read_ns__DownloadVideoRecordSIPResponse
#define soap_read_ns__DownloadVideoRecordSIPResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DownloadVideoRecordSIPResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__DownloadVideoRecordSIPResponse * SOAP_FMAC4 soap_get_ns__DownloadVideoRecordSIPResponse(struct soap*, struct ns__DownloadVideoRecordSIPResponse *, const char*, const char*);

#define soap_new_ns__DownloadVideoRecordSIPResponse(soap, n) soap_instantiate_ns__DownloadVideoRecordSIPResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__DownloadVideoRecordSIPResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__DownloadVideoRecordSIPResponse * SOAP_FMAC2 soap_instantiate_ns__DownloadVideoRecordSIPResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DownloadVideoRecordSIPResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__PlayVideoRecordSIP
#define SOAP_TYPE_ns__PlayVideoRecordSIP (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__PlayVideoRecordSIP(struct soap*, struct ns__PlayVideoRecordSIP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__PlayVideoRecordSIP(struct soap*, const struct ns__PlayVideoRecordSIP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__PlayVideoRecordSIP(struct soap*, const char*, int, const struct ns__PlayVideoRecordSIP *, const char*);
SOAP_FMAC3 struct ns__PlayVideoRecordSIP * SOAP_FMAC4 soap_in_ns__PlayVideoRecordSIP(struct soap*, const char*, struct ns__PlayVideoRecordSIP *, const char*);

#ifndef soap_write_ns__PlayVideoRecordSIP
#define soap_write_ns__PlayVideoRecordSIP(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__PlayVideoRecordSIP(soap, data), 0) || soap_put_ns__PlayVideoRecordSIP(soap, data, "ns:PlayVideoRecordSIP", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__PlayVideoRecordSIP(struct soap*, const struct ns__PlayVideoRecordSIP *, const char*, const char*);

#ifndef soap_read_ns__PlayVideoRecordSIP
#define soap_read_ns__PlayVideoRecordSIP(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__PlayVideoRecordSIP(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__PlayVideoRecordSIP * SOAP_FMAC4 soap_get_ns__PlayVideoRecordSIP(struct soap*, struct ns__PlayVideoRecordSIP *, const char*, const char*);

#define soap_new_ns__PlayVideoRecordSIP(soap, n) soap_instantiate_ns__PlayVideoRecordSIP(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__PlayVideoRecordSIP(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__PlayVideoRecordSIP * SOAP_FMAC2 soap_instantiate_ns__PlayVideoRecordSIP(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__PlayVideoRecordSIP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__PlayVideoRecordSIPResponse
#define SOAP_TYPE_ns__PlayVideoRecordSIPResponse (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__PlayVideoRecordSIPResponse(struct soap*, struct ns__PlayVideoRecordSIPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__PlayVideoRecordSIPResponse(struct soap*, const struct ns__PlayVideoRecordSIPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__PlayVideoRecordSIPResponse(struct soap*, const char*, int, const struct ns__PlayVideoRecordSIPResponse *, const char*);
SOAP_FMAC3 struct ns__PlayVideoRecordSIPResponse * SOAP_FMAC4 soap_in_ns__PlayVideoRecordSIPResponse(struct soap*, const char*, struct ns__PlayVideoRecordSIPResponse *, const char*);

#ifndef soap_write_ns__PlayVideoRecordSIPResponse
#define soap_write_ns__PlayVideoRecordSIPResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__PlayVideoRecordSIPResponse(soap, data), 0) || soap_put_ns__PlayVideoRecordSIPResponse(soap, data, "ns:PlayVideoRecordSIPResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__PlayVideoRecordSIPResponse(struct soap*, const struct ns__PlayVideoRecordSIPResponse *, const char*, const char*);

#ifndef soap_read_ns__PlayVideoRecordSIPResponse
#define soap_read_ns__PlayVideoRecordSIPResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__PlayVideoRecordSIPResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__PlayVideoRecordSIPResponse * SOAP_FMAC4 soap_get_ns__PlayVideoRecordSIPResponse(struct soap*, struct ns__PlayVideoRecordSIPResponse *, const char*, const char*);

#define soap_new_ns__PlayVideoRecordSIPResponse(soap, n) soap_instantiate_ns__PlayVideoRecordSIPResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__PlayVideoRecordSIPResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__PlayVideoRecordSIPResponse * SOAP_FMAC2 soap_instantiate_ns__PlayVideoRecordSIPResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__PlayVideoRecordSIPResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBOperate
#define SOAP_TYPE_ns__HBOperate (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBOperate(struct soap*, struct ns__HBOperate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBOperate(struct soap*, const struct ns__HBOperate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBOperate(struct soap*, const char*, int, const struct ns__HBOperate *, const char*);
SOAP_FMAC3 struct ns__HBOperate * SOAP_FMAC4 soap_in_ns__HBOperate(struct soap*, const char*, struct ns__HBOperate *, const char*);

#ifndef soap_write_ns__HBOperate
#define soap_write_ns__HBOperate(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBOperate(soap, data), 0) || soap_put_ns__HBOperate(soap, data, "ns:HBOperate", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBOperate(struct soap*, const struct ns__HBOperate *, const char*, const char*);

#ifndef soap_read_ns__HBOperate
#define soap_read_ns__HBOperate(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBOperate(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBOperate * SOAP_FMAC4 soap_get_ns__HBOperate(struct soap*, struct ns__HBOperate *, const char*, const char*);

#define soap_new_ns__HBOperate(soap, n) soap_instantiate_ns__HBOperate(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBOperate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBOperate * SOAP_FMAC2 soap_instantiate_ns__HBOperate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBOperate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBOperateResponse
#define SOAP_TYPE_ns__HBOperateResponse (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBOperateResponse(struct soap*, struct ns__HBOperateResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBOperateResponse(struct soap*, const struct ns__HBOperateResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBOperateResponse(struct soap*, const char*, int, const struct ns__HBOperateResponse *, const char*);
SOAP_FMAC3 struct ns__HBOperateResponse * SOAP_FMAC4 soap_in_ns__HBOperateResponse(struct soap*, const char*, struct ns__HBOperateResponse *, const char*);

#ifndef soap_write_ns__HBOperateResponse
#define soap_write_ns__HBOperateResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBOperateResponse(soap, data), 0) || soap_put_ns__HBOperateResponse(soap, data, "ns:HBOperateResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBOperateResponse(struct soap*, const struct ns__HBOperateResponse *, const char*, const char*);

#ifndef soap_read_ns__HBOperateResponse
#define soap_read_ns__HBOperateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBOperateResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBOperateResponse * SOAP_FMAC4 soap_get_ns__HBOperateResponse(struct soap*, struct ns__HBOperateResponse *, const char*, const char*);

#define soap_new_ns__HBOperateResponse(soap, n) soap_instantiate_ns__HBOperateResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBOperateResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBOperateResponse * SOAP_FMAC2 soap_instantiate_ns__HBOperateResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBOperateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__NetMaster
#define SOAP_TYPE_ns__NetMaster (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__NetMaster(struct soap*, struct ns__NetMaster *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__NetMaster(struct soap*, const struct ns__NetMaster *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__NetMaster(struct soap*, const char*, int, const struct ns__NetMaster *, const char*);
SOAP_FMAC3 struct ns__NetMaster * SOAP_FMAC4 soap_in_ns__NetMaster(struct soap*, const char*, struct ns__NetMaster *, const char*);

#ifndef soap_write_ns__NetMaster
#define soap_write_ns__NetMaster(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__NetMaster(soap, data), 0) || soap_put_ns__NetMaster(soap, data, "ns:NetMaster", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__NetMaster(struct soap*, const struct ns__NetMaster *, const char*, const char*);

#ifndef soap_read_ns__NetMaster
#define soap_read_ns__NetMaster(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__NetMaster(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__NetMaster * SOAP_FMAC4 soap_get_ns__NetMaster(struct soap*, struct ns__NetMaster *, const char*, const char*);

#define soap_new_ns__NetMaster(soap, n) soap_instantiate_ns__NetMaster(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__NetMaster(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__NetMaster * SOAP_FMAC2 soap_instantiate_ns__NetMaster(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__NetMaster(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__NetMasterResponse
#define SOAP_TYPE_ns__NetMasterResponse (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__NetMasterResponse(struct soap*, struct ns__NetMasterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__NetMasterResponse(struct soap*, const struct ns__NetMasterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__NetMasterResponse(struct soap*, const char*, int, const struct ns__NetMasterResponse *, const char*);
SOAP_FMAC3 struct ns__NetMasterResponse * SOAP_FMAC4 soap_in_ns__NetMasterResponse(struct soap*, const char*, struct ns__NetMasterResponse *, const char*);

#ifndef soap_write_ns__NetMasterResponse
#define soap_write_ns__NetMasterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__NetMasterResponse(soap, data), 0) || soap_put_ns__NetMasterResponse(soap, data, "ns:NetMasterResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__NetMasterResponse(struct soap*, const struct ns__NetMasterResponse *, const char*, const char*);

#ifndef soap_read_ns__NetMasterResponse
#define soap_read_ns__NetMasterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__NetMasterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__NetMasterResponse * SOAP_FMAC4 soap_get_ns__NetMasterResponse(struct soap*, struct ns__NetMasterResponse *, const char*, const char*);

#define soap_new_ns__NetMasterResponse(soap, n) soap_instantiate_ns__NetMasterResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__NetMasterResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__NetMasterResponse * SOAP_FMAC2 soap_instantiate_ns__NetMasterResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__NetMasterResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__AutoSysUpdate
#define SOAP_TYPE_ns__AutoSysUpdate (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__AutoSysUpdate(struct soap*, struct ns__AutoSysUpdate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__AutoSysUpdate(struct soap*, const struct ns__AutoSysUpdate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__AutoSysUpdate(struct soap*, const char*, int, const struct ns__AutoSysUpdate *, const char*);
SOAP_FMAC3 struct ns__AutoSysUpdate * SOAP_FMAC4 soap_in_ns__AutoSysUpdate(struct soap*, const char*, struct ns__AutoSysUpdate *, const char*);

#ifndef soap_write_ns__AutoSysUpdate
#define soap_write_ns__AutoSysUpdate(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__AutoSysUpdate(soap, data), 0) || soap_put_ns__AutoSysUpdate(soap, data, "ns:AutoSysUpdate", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__AutoSysUpdate(struct soap*, const struct ns__AutoSysUpdate *, const char*, const char*);

#ifndef soap_read_ns__AutoSysUpdate
#define soap_read_ns__AutoSysUpdate(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__AutoSysUpdate(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__AutoSysUpdate * SOAP_FMAC4 soap_get_ns__AutoSysUpdate(struct soap*, struct ns__AutoSysUpdate *, const char*, const char*);

#define soap_new_ns__AutoSysUpdate(soap, n) soap_instantiate_ns__AutoSysUpdate(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__AutoSysUpdate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__AutoSysUpdate * SOAP_FMAC2 soap_instantiate_ns__AutoSysUpdate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__AutoSysUpdate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HeartBeat
#define SOAP_TYPE_ns__HeartBeat (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HeartBeat(struct soap*, struct ns__HeartBeat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HeartBeat(struct soap*, const struct ns__HeartBeat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HeartBeat(struct soap*, const char*, int, const struct ns__HeartBeat *, const char*);
SOAP_FMAC3 struct ns__HeartBeat * SOAP_FMAC4 soap_in_ns__HeartBeat(struct soap*, const char*, struct ns__HeartBeat *, const char*);

#ifndef soap_write_ns__HeartBeat
#define soap_write_ns__HeartBeat(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HeartBeat(soap, data), 0) || soap_put_ns__HeartBeat(soap, data, "ns:HeartBeat", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HeartBeat(struct soap*, const struct ns__HeartBeat *, const char*, const char*);

#ifndef soap_read_ns__HeartBeat
#define soap_read_ns__HeartBeat(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HeartBeat(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HeartBeat * SOAP_FMAC4 soap_get_ns__HeartBeat(struct soap*, struct ns__HeartBeat *, const char*, const char*);

#define soap_new_ns__HeartBeat(soap, n) soap_instantiate_ns__HeartBeat(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HeartBeat(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HeartBeat * SOAP_FMAC2 soap_instantiate_ns__HeartBeat(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HeartBeat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__AbandonVideoRecord
#define SOAP_TYPE_ns__AbandonVideoRecord (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__AbandonVideoRecord(struct soap*, struct ns__AbandonVideoRecord *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__AbandonVideoRecord(struct soap*, const struct ns__AbandonVideoRecord *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__AbandonVideoRecord(struct soap*, const char*, int, const struct ns__AbandonVideoRecord *, const char*);
SOAP_FMAC3 struct ns__AbandonVideoRecord * SOAP_FMAC4 soap_in_ns__AbandonVideoRecord(struct soap*, const char*, struct ns__AbandonVideoRecord *, const char*);

#ifndef soap_write_ns__AbandonVideoRecord
#define soap_write_ns__AbandonVideoRecord(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__AbandonVideoRecord(soap, data), 0) || soap_put_ns__AbandonVideoRecord(soap, data, "ns:AbandonVideoRecord", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__AbandonVideoRecord(struct soap*, const struct ns__AbandonVideoRecord *, const char*, const char*);

#ifndef soap_read_ns__AbandonVideoRecord
#define soap_read_ns__AbandonVideoRecord(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__AbandonVideoRecord(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__AbandonVideoRecord * SOAP_FMAC4 soap_get_ns__AbandonVideoRecord(struct soap*, struct ns__AbandonVideoRecord *, const char*, const char*);

#define soap_new_ns__AbandonVideoRecord(soap, n) soap_instantiate_ns__AbandonVideoRecord(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__AbandonVideoRecord(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__AbandonVideoRecord * SOAP_FMAC2 soap_instantiate_ns__AbandonVideoRecord(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__AbandonVideoRecord(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DownloadVideoRecord
#define SOAP_TYPE_ns__DownloadVideoRecord (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DownloadVideoRecord(struct soap*, struct ns__DownloadVideoRecord *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DownloadVideoRecord(struct soap*, const struct ns__DownloadVideoRecord *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DownloadVideoRecord(struct soap*, const char*, int, const struct ns__DownloadVideoRecord *, const char*);
SOAP_FMAC3 struct ns__DownloadVideoRecord * SOAP_FMAC4 soap_in_ns__DownloadVideoRecord(struct soap*, const char*, struct ns__DownloadVideoRecord *, const char*);

#ifndef soap_write_ns__DownloadVideoRecord
#define soap_write_ns__DownloadVideoRecord(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__DownloadVideoRecord(soap, data), 0) || soap_put_ns__DownloadVideoRecord(soap, data, "ns:DownloadVideoRecord", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DownloadVideoRecord(struct soap*, const struct ns__DownloadVideoRecord *, const char*, const char*);

#ifndef soap_read_ns__DownloadVideoRecord
#define soap_read_ns__DownloadVideoRecord(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DownloadVideoRecord(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__DownloadVideoRecord * SOAP_FMAC4 soap_get_ns__DownloadVideoRecord(struct soap*, struct ns__DownloadVideoRecord *, const char*, const char*);

#define soap_new_ns__DownloadVideoRecord(soap, n) soap_instantiate_ns__DownloadVideoRecord(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__DownloadVideoRecord(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__DownloadVideoRecord * SOAP_FMAC2 soap_instantiate_ns__DownloadVideoRecord(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DownloadVideoRecord(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__DownloadVideoRecordResponse
#define SOAP_TYPE_ns__DownloadVideoRecordResponse (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__DownloadVideoRecordResponse(struct soap*, struct ns__DownloadVideoRecordResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__DownloadVideoRecordResponse(struct soap*, const struct ns__DownloadVideoRecordResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__DownloadVideoRecordResponse(struct soap*, const char*, int, const struct ns__DownloadVideoRecordResponse *, const char*);
SOAP_FMAC3 struct ns__DownloadVideoRecordResponse * SOAP_FMAC4 soap_in_ns__DownloadVideoRecordResponse(struct soap*, const char*, struct ns__DownloadVideoRecordResponse *, const char*);

#ifndef soap_write_ns__DownloadVideoRecordResponse
#define soap_write_ns__DownloadVideoRecordResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__DownloadVideoRecordResponse(soap, data), 0) || soap_put_ns__DownloadVideoRecordResponse(soap, data, "ns:DownloadVideoRecordResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__DownloadVideoRecordResponse(struct soap*, const struct ns__DownloadVideoRecordResponse *, const char*, const char*);

#ifndef soap_read_ns__DownloadVideoRecordResponse
#define soap_read_ns__DownloadVideoRecordResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__DownloadVideoRecordResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__DownloadVideoRecordResponse * SOAP_FMAC4 soap_get_ns__DownloadVideoRecordResponse(struct soap*, struct ns__DownloadVideoRecordResponse *, const char*, const char*);

#define soap_new_ns__DownloadVideoRecordResponse(soap, n) soap_instantiate_ns__DownloadVideoRecordResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__DownloadVideoRecordResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__DownloadVideoRecordResponse * SOAP_FMAC2 soap_instantiate_ns__DownloadVideoRecordResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__DownloadVideoRecordResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__PlayVideoRecord
#define SOAP_TYPE_ns__PlayVideoRecord (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__PlayVideoRecord(struct soap*, struct ns__PlayVideoRecord *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__PlayVideoRecord(struct soap*, const struct ns__PlayVideoRecord *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__PlayVideoRecord(struct soap*, const char*, int, const struct ns__PlayVideoRecord *, const char*);
SOAP_FMAC3 struct ns__PlayVideoRecord * SOAP_FMAC4 soap_in_ns__PlayVideoRecord(struct soap*, const char*, struct ns__PlayVideoRecord *, const char*);

#ifndef soap_write_ns__PlayVideoRecord
#define soap_write_ns__PlayVideoRecord(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__PlayVideoRecord(soap, data), 0) || soap_put_ns__PlayVideoRecord(soap, data, "ns:PlayVideoRecord", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__PlayVideoRecord(struct soap*, const struct ns__PlayVideoRecord *, const char*, const char*);

#ifndef soap_read_ns__PlayVideoRecord
#define soap_read_ns__PlayVideoRecord(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__PlayVideoRecord(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__PlayVideoRecord * SOAP_FMAC4 soap_get_ns__PlayVideoRecord(struct soap*, struct ns__PlayVideoRecord *, const char*, const char*);

#define soap_new_ns__PlayVideoRecord(soap, n) soap_instantiate_ns__PlayVideoRecord(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__PlayVideoRecord(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__PlayVideoRecord * SOAP_FMAC2 soap_instantiate_ns__PlayVideoRecord(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__PlayVideoRecord(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__QueryVideoUrl
#define SOAP_TYPE_ns__QueryVideoUrl (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__QueryVideoUrl(struct soap*, struct ns__QueryVideoUrl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__QueryVideoUrl(struct soap*, const struct ns__QueryVideoUrl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__QueryVideoUrl(struct soap*, const char*, int, const struct ns__QueryVideoUrl *, const char*);
SOAP_FMAC3 struct ns__QueryVideoUrl * SOAP_FMAC4 soap_in_ns__QueryVideoUrl(struct soap*, const char*, struct ns__QueryVideoUrl *, const char*);

#ifndef soap_write_ns__QueryVideoUrl
#define soap_write_ns__QueryVideoUrl(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__QueryVideoUrl(soap, data), 0) || soap_put_ns__QueryVideoUrl(soap, data, "ns:QueryVideoUrl", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__QueryVideoUrl(struct soap*, const struct ns__QueryVideoUrl *, const char*, const char*);

#ifndef soap_read_ns__QueryVideoUrl
#define soap_read_ns__QueryVideoUrl(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__QueryVideoUrl(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__QueryVideoUrl * SOAP_FMAC4 soap_get_ns__QueryVideoUrl(struct soap*, struct ns__QueryVideoUrl *, const char*, const char*);

#define soap_new_ns__QueryVideoUrl(soap, n) soap_instantiate_ns__QueryVideoUrl(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__QueryVideoUrl(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__QueryVideoUrl * SOAP_FMAC2 soap_instantiate_ns__QueryVideoUrl(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__QueryVideoUrl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__QueryVideoUrlResponse
#define SOAP_TYPE_ns__QueryVideoUrlResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__QueryVideoUrlResponse(struct soap*, struct ns__QueryVideoUrlResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__QueryVideoUrlResponse(struct soap*, const struct ns__QueryVideoUrlResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__QueryVideoUrlResponse(struct soap*, const char*, int, const struct ns__QueryVideoUrlResponse *, const char*);
SOAP_FMAC3 struct ns__QueryVideoUrlResponse * SOAP_FMAC4 soap_in_ns__QueryVideoUrlResponse(struct soap*, const char*, struct ns__QueryVideoUrlResponse *, const char*);

#ifndef soap_write_ns__QueryVideoUrlResponse
#define soap_write_ns__QueryVideoUrlResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__QueryVideoUrlResponse(soap, data), 0) || soap_put_ns__QueryVideoUrlResponse(soap, data, "ns:QueryVideoUrlResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__QueryVideoUrlResponse(struct soap*, const struct ns__QueryVideoUrlResponse *, const char*, const char*);

#ifndef soap_read_ns__QueryVideoUrlResponse
#define soap_read_ns__QueryVideoUrlResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__QueryVideoUrlResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__QueryVideoUrlResponse * SOAP_FMAC4 soap_get_ns__QueryVideoUrlResponse(struct soap*, struct ns__QueryVideoUrlResponse *, const char*, const char*);

#define soap_new_ns__QueryVideoUrlResponse(soap, n) soap_instantiate_ns__QueryVideoUrlResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__QueryVideoUrlResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__QueryVideoUrlResponse * SOAP_FMAC2 soap_instantiate_ns__QueryVideoUrlResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__QueryVideoUrlResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__QueryVideoRecord
#define SOAP_TYPE_ns__QueryVideoRecord (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__QueryVideoRecord(struct soap*, struct ns__QueryVideoRecord *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__QueryVideoRecord(struct soap*, const struct ns__QueryVideoRecord *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__QueryVideoRecord(struct soap*, const char*, int, const struct ns__QueryVideoRecord *, const char*);
SOAP_FMAC3 struct ns__QueryVideoRecord * SOAP_FMAC4 soap_in_ns__QueryVideoRecord(struct soap*, const char*, struct ns__QueryVideoRecord *, const char*);

#ifndef soap_write_ns__QueryVideoRecord
#define soap_write_ns__QueryVideoRecord(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__QueryVideoRecord(soap, data), 0) || soap_put_ns__QueryVideoRecord(soap, data, "ns:QueryVideoRecord", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__QueryVideoRecord(struct soap*, const struct ns__QueryVideoRecord *, const char*, const char*);

#ifndef soap_read_ns__QueryVideoRecord
#define soap_read_ns__QueryVideoRecord(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__QueryVideoRecord(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__QueryVideoRecord * SOAP_FMAC4 soap_get_ns__QueryVideoRecord(struct soap*, struct ns__QueryVideoRecord *, const char*, const char*);

#define soap_new_ns__QueryVideoRecord(soap, n) soap_instantiate_ns__QueryVideoRecord(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__QueryVideoRecord(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__QueryVideoRecord * SOAP_FMAC2 soap_instantiate_ns__QueryVideoRecord(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__QueryVideoRecord(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__QueryVideoRecordResponse
#define SOAP_TYPE_ns__QueryVideoRecordResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__QueryVideoRecordResponse(struct soap*, struct ns__QueryVideoRecordResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__QueryVideoRecordResponse(struct soap*, const struct ns__QueryVideoRecordResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__QueryVideoRecordResponse(struct soap*, const char*, int, const struct ns__QueryVideoRecordResponse *, const char*);
SOAP_FMAC3 struct ns__QueryVideoRecordResponse * SOAP_FMAC4 soap_in_ns__QueryVideoRecordResponse(struct soap*, const char*, struct ns__QueryVideoRecordResponse *, const char*);

#ifndef soap_write_ns__QueryVideoRecordResponse
#define soap_write_ns__QueryVideoRecordResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__QueryVideoRecordResponse(soap, data), 0) || soap_put_ns__QueryVideoRecordResponse(soap, data, "ns:QueryVideoRecordResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__QueryVideoRecordResponse(struct soap*, const struct ns__QueryVideoRecordResponse *, const char*, const char*);

#ifndef soap_read_ns__QueryVideoRecordResponse
#define soap_read_ns__QueryVideoRecordResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__QueryVideoRecordResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__QueryVideoRecordResponse * SOAP_FMAC4 soap_get_ns__QueryVideoRecordResponse(struct soap*, struct ns__QueryVideoRecordResponse *, const char*, const char*);

#define soap_new_ns__QueryVideoRecordResponse(soap, n) soap_instantiate_ns__QueryVideoRecordResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__QueryVideoRecordResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__QueryVideoRecordResponse * SOAP_FMAC2 soap_instantiate_ns__QueryVideoRecordResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__QueryVideoRecordResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__AbandonCameraStream
#define SOAP_TYPE_ns__AbandonCameraStream (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__AbandonCameraStream(struct soap*, struct ns__AbandonCameraStream *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__AbandonCameraStream(struct soap*, const struct ns__AbandonCameraStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__AbandonCameraStream(struct soap*, const char*, int, const struct ns__AbandonCameraStream *, const char*);
SOAP_FMAC3 struct ns__AbandonCameraStream * SOAP_FMAC4 soap_in_ns__AbandonCameraStream(struct soap*, const char*, struct ns__AbandonCameraStream *, const char*);

#ifndef soap_write_ns__AbandonCameraStream
#define soap_write_ns__AbandonCameraStream(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__AbandonCameraStream(soap, data), 0) || soap_put_ns__AbandonCameraStream(soap, data, "ns:AbandonCameraStream", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__AbandonCameraStream(struct soap*, const struct ns__AbandonCameraStream *, const char*, const char*);

#ifndef soap_read_ns__AbandonCameraStream
#define soap_read_ns__AbandonCameraStream(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__AbandonCameraStream(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__AbandonCameraStream * SOAP_FMAC4 soap_get_ns__AbandonCameraStream(struct soap*, struct ns__AbandonCameraStream *, const char*, const char*);

#define soap_new_ns__AbandonCameraStream(soap, n) soap_instantiate_ns__AbandonCameraStream(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__AbandonCameraStream(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__AbandonCameraStream * SOAP_FMAC2 soap_instantiate_ns__AbandonCameraStream(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__AbandonCameraStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__PTZCtrlCamera
#define SOAP_TYPE_ns__PTZCtrlCamera (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__PTZCtrlCamera(struct soap*, struct ns__PTZCtrlCamera *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__PTZCtrlCamera(struct soap*, const struct ns__PTZCtrlCamera *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__PTZCtrlCamera(struct soap*, const char*, int, const struct ns__PTZCtrlCamera *, const char*);
SOAP_FMAC3 struct ns__PTZCtrlCamera * SOAP_FMAC4 soap_in_ns__PTZCtrlCamera(struct soap*, const char*, struct ns__PTZCtrlCamera *, const char*);

#ifndef soap_write_ns__PTZCtrlCamera
#define soap_write_ns__PTZCtrlCamera(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__PTZCtrlCamera(soap, data), 0) || soap_put_ns__PTZCtrlCamera(soap, data, "ns:PTZCtrlCamera", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__PTZCtrlCamera(struct soap*, const struct ns__PTZCtrlCamera *, const char*, const char*);

#ifndef soap_read_ns__PTZCtrlCamera
#define soap_read_ns__PTZCtrlCamera(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__PTZCtrlCamera(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__PTZCtrlCamera * SOAP_FMAC4 soap_get_ns__PTZCtrlCamera(struct soap*, struct ns__PTZCtrlCamera *, const char*, const char*);

#define soap_new_ns__PTZCtrlCamera(soap, n) soap_instantiate_ns__PTZCtrlCamera(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__PTZCtrlCamera(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__PTZCtrlCamera * SOAP_FMAC2 soap_instantiate_ns__PTZCtrlCamera(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__PTZCtrlCamera(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__SwitchCameraToStream
#define SOAP_TYPE_ns__SwitchCameraToStream (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__SwitchCameraToStream(struct soap*, struct ns__SwitchCameraToStream *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__SwitchCameraToStream(struct soap*, const struct ns__SwitchCameraToStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__SwitchCameraToStream(struct soap*, const char*, int, const struct ns__SwitchCameraToStream *, const char*);
SOAP_FMAC3 struct ns__SwitchCameraToStream * SOAP_FMAC4 soap_in_ns__SwitchCameraToStream(struct soap*, const char*, struct ns__SwitchCameraToStream *, const char*);

#ifndef soap_write_ns__SwitchCameraToStream
#define soap_write_ns__SwitchCameraToStream(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__SwitchCameraToStream(soap, data), 0) || soap_put_ns__SwitchCameraToStream(soap, data, "ns:SwitchCameraToStream", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__SwitchCameraToStream(struct soap*, const struct ns__SwitchCameraToStream *, const char*, const char*);

#ifndef soap_read_ns__SwitchCameraToStream
#define soap_read_ns__SwitchCameraToStream(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__SwitchCameraToStream(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__SwitchCameraToStream * SOAP_FMAC4 soap_get_ns__SwitchCameraToStream(struct soap*, struct ns__SwitchCameraToStream *, const char*, const char*);

#define soap_new_ns__SwitchCameraToStream(soap, n) soap_instantiate_ns__SwitchCameraToStream(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__SwitchCameraToStream(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__SwitchCameraToStream * SOAP_FMAC2 soap_instantiate_ns__SwitchCameraToStream(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__SwitchCameraToStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns_HeartBeat
#define SOAP_TYPE_ns_HeartBeat (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns_HeartBeat(struct soap*, struct ns_HeartBeat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns_HeartBeat(struct soap*, const struct ns_HeartBeat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns_HeartBeat(struct soap*, const char*, int, const struct ns_HeartBeat *, const char*);
SOAP_FMAC3 struct ns_HeartBeat * SOAP_FMAC4 soap_in_ns_HeartBeat(struct soap*, const char*, struct ns_HeartBeat *, const char*);

#ifndef soap_write_ns_HeartBeat
#define soap_write_ns_HeartBeat(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns_HeartBeat(soap, data), 0) || soap_put_ns_HeartBeat(soap, data, "ns-HeartBeat", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns_HeartBeat(struct soap*, const struct ns_HeartBeat *, const char*, const char*);

#ifndef soap_read_ns_HeartBeat
#define soap_read_ns_HeartBeat(soap, data) ( soap_begin_recv(soap) || !soap_get_ns_HeartBeat(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns_HeartBeat * SOAP_FMAC4 soap_get_ns_HeartBeat(struct soap*, struct ns_HeartBeat *, const char*, const char*);

#define soap_new_ns_HeartBeat(soap, n) soap_instantiate_ns_HeartBeat(soap, n, NULL, NULL, NULL)


#define soap_delete_ns_HeartBeat(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns_HeartBeat * SOAP_FMAC2 soap_instantiate_ns_HeartBeat(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns_HeartBeat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBUSERINFO
#define SOAP_TYPE_ns__HBUSERINFO (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBUSERINFO(struct soap*, struct ns__HBUSERINFO *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBUSERINFO(struct soap*, const struct ns__HBUSERINFO *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBUSERINFO(struct soap*, const char*, int, const struct ns__HBUSERINFO *, const char*);
SOAP_FMAC3 struct ns__HBUSERINFO * SOAP_FMAC4 soap_in_ns__HBUSERINFO(struct soap*, const char*, struct ns__HBUSERINFO *, const char*);

#ifndef soap_write_ns__HBUSERINFO
#define soap_write_ns__HBUSERINFO(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBUSERINFO(soap, data), 0) || soap_put_ns__HBUSERINFO(soap, data, "ns:HBUSERINFO", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBUSERINFO(struct soap*, const struct ns__HBUSERINFO *, const char*, const char*);

#ifndef soap_read_ns__HBUSERINFO
#define soap_read_ns__HBUSERINFO(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBUSERINFO(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBUSERINFO * SOAP_FMAC4 soap_get_ns__HBUSERINFO(struct soap*, struct ns__HBUSERINFO *, const char*, const char*);

#define soap_new_ns__HBUSERINFO(soap, n) soap_instantiate_ns__HBUSERINFO(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBUSERINFO(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBUSERINFO * SOAP_FMAC2 soap_instantiate_ns__HBUSERINFO(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBUSERINFO(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBNET_CAMREA_INFO
#define SOAP_TYPE_ns__HBNET_CAMREA_INFO (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBNET_CAMREA_INFO(struct soap*, struct ns__HBNET_CAMREA_INFO *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBNET_CAMREA_INFO(struct soap*, const struct ns__HBNET_CAMREA_INFO *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBNET_CAMREA_INFO(struct soap*, const char*, int, const struct ns__HBNET_CAMREA_INFO *, const char*);
SOAP_FMAC3 struct ns__HBNET_CAMREA_INFO * SOAP_FMAC4 soap_in_ns__HBNET_CAMREA_INFO(struct soap*, const char*, struct ns__HBNET_CAMREA_INFO *, const char*);

#ifndef soap_write_ns__HBNET_CAMREA_INFO
#define soap_write_ns__HBNET_CAMREA_INFO(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBNET_CAMREA_INFO(soap, data), 0) || soap_put_ns__HBNET_CAMREA_INFO(soap, data, "ns:HBNET-CAMREA-INFO", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBNET_CAMREA_INFO(struct soap*, const struct ns__HBNET_CAMREA_INFO *, const char*, const char*);

#ifndef soap_read_ns__HBNET_CAMREA_INFO
#define soap_read_ns__HBNET_CAMREA_INFO(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBNET_CAMREA_INFO(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_CAMREA_INFO * SOAP_FMAC4 soap_get_ns__HBNET_CAMREA_INFO(struct soap*, struct ns__HBNET_CAMREA_INFO *, const char*, const char*);

#define soap_new_ns__HBNET_CAMREA_INFO(soap, n) soap_instantiate_ns__HBNET_CAMREA_INFO(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBNET_CAMREA_INFO(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBNET_CAMREA_INFO * SOAP_FMAC2 soap_instantiate_ns__HBNET_CAMREA_INFO(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBNET_CAMREA_INFO(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBNET_RECOED_FILECOND
#define SOAP_TYPE_ns__HBNET_RECOED_FILECOND (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBNET_RECOED_FILECOND(struct soap*, struct ns__HBNET_RECOED_FILECOND *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBNET_RECOED_FILECOND(struct soap*, const struct ns__HBNET_RECOED_FILECOND *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBNET_RECOED_FILECOND(struct soap*, const char*, int, const struct ns__HBNET_RECOED_FILECOND *, const char*);
SOAP_FMAC3 struct ns__HBNET_RECOED_FILECOND * SOAP_FMAC4 soap_in_ns__HBNET_RECOED_FILECOND(struct soap*, const char*, struct ns__HBNET_RECOED_FILECOND *, const char*);

#ifndef soap_write_ns__HBNET_RECOED_FILECOND
#define soap_write_ns__HBNET_RECOED_FILECOND(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBNET_RECOED_FILECOND(soap, data), 0) || soap_put_ns__HBNET_RECOED_FILECOND(soap, data, "ns:HBNET-RECOED-FILECOND", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBNET_RECOED_FILECOND(struct soap*, const struct ns__HBNET_RECOED_FILECOND *, const char*, const char*);

#ifndef soap_read_ns__HBNET_RECOED_FILECOND
#define soap_read_ns__HBNET_RECOED_FILECOND(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBNET_RECOED_FILECOND(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_RECOED_FILECOND * SOAP_FMAC4 soap_get_ns__HBNET_RECOED_FILECOND(struct soap*, struct ns__HBNET_RECOED_FILECOND *, const char*, const char*);

#define soap_new_ns__HBNET_RECOED_FILECOND(soap, n) soap_instantiate_ns__HBNET_RECOED_FILECOND(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBNET_RECOED_FILECOND(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBNET_RECOED_FILECOND * SOAP_FMAC2 soap_instantiate_ns__HBNET_RECOED_FILECOND(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBNET_RECOED_FILECOND(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBNET_RECOED_PLAYCTRL
#define SOAP_TYPE_ns__HBNET_RECOED_PLAYCTRL (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBNET_RECOED_PLAYCTRL(struct soap*, struct ns__HBNET_RECOED_PLAYCTRL *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBNET_RECOED_PLAYCTRL(struct soap*, const struct ns__HBNET_RECOED_PLAYCTRL *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBNET_RECOED_PLAYCTRL(struct soap*, const char*, int, const struct ns__HBNET_RECOED_PLAYCTRL *, const char*);
SOAP_FMAC3 struct ns__HBNET_RECOED_PLAYCTRL * SOAP_FMAC4 soap_in_ns__HBNET_RECOED_PLAYCTRL(struct soap*, const char*, struct ns__HBNET_RECOED_PLAYCTRL *, const char*);

#ifndef soap_write_ns__HBNET_RECOED_PLAYCTRL
#define soap_write_ns__HBNET_RECOED_PLAYCTRL(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBNET_RECOED_PLAYCTRL(soap, data), 0) || soap_put_ns__HBNET_RECOED_PLAYCTRL(soap, data, "ns:HBNET-RECOED-PLAYCTRL", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBNET_RECOED_PLAYCTRL(struct soap*, const struct ns__HBNET_RECOED_PLAYCTRL *, const char*, const char*);

#ifndef soap_read_ns__HBNET_RECOED_PLAYCTRL
#define soap_read_ns__HBNET_RECOED_PLAYCTRL(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBNET_RECOED_PLAYCTRL(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_RECOED_PLAYCTRL * SOAP_FMAC4 soap_get_ns__HBNET_RECOED_PLAYCTRL(struct soap*, struct ns__HBNET_RECOED_PLAYCTRL *, const char*, const char*);

#define soap_new_ns__HBNET_RECOED_PLAYCTRL(soap, n) soap_instantiate_ns__HBNET_RECOED_PLAYCTRL(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBNET_RECOED_PLAYCTRL(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBNET_RECOED_PLAYCTRL * SOAP_FMAC2 soap_instantiate_ns__HBNET_RECOED_PLAYCTRL(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBNET_RECOED_PLAYCTRL(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBNET_CAMERA_PTZCTRL
#define SOAP_TYPE_ns__HBNET_CAMERA_PTZCTRL (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBNET_CAMERA_PTZCTRL(struct soap*, struct ns__HBNET_CAMERA_PTZCTRL *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBNET_CAMERA_PTZCTRL(struct soap*, const struct ns__HBNET_CAMERA_PTZCTRL *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBNET_CAMERA_PTZCTRL(struct soap*, const char*, int, const struct ns__HBNET_CAMERA_PTZCTRL *, const char*);
SOAP_FMAC3 struct ns__HBNET_CAMERA_PTZCTRL * SOAP_FMAC4 soap_in_ns__HBNET_CAMERA_PTZCTRL(struct soap*, const char*, struct ns__HBNET_CAMERA_PTZCTRL *, const char*);

#ifndef soap_write_ns__HBNET_CAMERA_PTZCTRL
#define soap_write_ns__HBNET_CAMERA_PTZCTRL(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBNET_CAMERA_PTZCTRL(soap, data), 0) || soap_put_ns__HBNET_CAMERA_PTZCTRL(soap, data, "ns:HBNET-CAMERA-PTZCTRL", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBNET_CAMERA_PTZCTRL(struct soap*, const struct ns__HBNET_CAMERA_PTZCTRL *, const char*, const char*);

#ifndef soap_read_ns__HBNET_CAMERA_PTZCTRL
#define soap_read_ns__HBNET_CAMERA_PTZCTRL(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBNET_CAMERA_PTZCTRL(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_CAMERA_PTZCTRL * SOAP_FMAC4 soap_get_ns__HBNET_CAMERA_PTZCTRL(struct soap*, struct ns__HBNET_CAMERA_PTZCTRL *, const char*, const char*);

#define soap_new_ns__HBNET_CAMERA_PTZCTRL(soap, n) soap_instantiate_ns__HBNET_CAMERA_PTZCTRL(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBNET_CAMERA_PTZCTRL(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBNET_CAMERA_PTZCTRL * SOAP_FMAC2 soap_instantiate_ns__HBNET_CAMERA_PTZCTRL(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBNET_CAMERA_PTZCTRL(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBNET_VIDEO_STREAM_RESP
#define SOAP_TYPE_ns__HBNET_VIDEO_STREAM_RESP (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, struct ns__HBNET_VIDEO_STREAM_RESP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, const struct ns__HBNET_VIDEO_STREAM_RESP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, const char*, int, const struct ns__HBNET_VIDEO_STREAM_RESP *, const char*);
SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM_RESP * SOAP_FMAC4 soap_in_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, const char*, struct ns__HBNET_VIDEO_STREAM_RESP *, const char*);

#ifndef soap_write_ns__HBNET_VIDEO_STREAM_RESP
#define soap_write_ns__HBNET_VIDEO_STREAM_RESP(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBNET_VIDEO_STREAM_RESP(soap, data), 0) || soap_put_ns__HBNET_VIDEO_STREAM_RESP(soap, data, "ns:HBNET-VIDEO-STREAM-RESP", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, const struct ns__HBNET_VIDEO_STREAM_RESP *, const char*, const char*);

#ifndef soap_read_ns__HBNET_VIDEO_STREAM_RESP
#define soap_read_ns__HBNET_VIDEO_STREAM_RESP(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBNET_VIDEO_STREAM_RESP(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM_RESP * SOAP_FMAC4 soap_get_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, struct ns__HBNET_VIDEO_STREAM_RESP *, const char*, const char*);

#define soap_new_ns__HBNET_VIDEO_STREAM_RESP(soap, n) soap_instantiate_ns__HBNET_VIDEO_STREAM_RESP(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBNET_VIDEO_STREAM_RESP(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBNET_VIDEO_STREAM_RESP * SOAP_FMAC2 soap_instantiate_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBNET_VIDEO_STREAM_RESP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__HBNET_VIDEO_STREAM
#define SOAP_TYPE_ns__HBNET_VIDEO_STREAM (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__HBNET_VIDEO_STREAM(struct soap*, struct ns__HBNET_VIDEO_STREAM *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__HBNET_VIDEO_STREAM(struct soap*, const struct ns__HBNET_VIDEO_STREAM *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__HBNET_VIDEO_STREAM(struct soap*, const char*, int, const struct ns__HBNET_VIDEO_STREAM *, const char*);
SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM * SOAP_FMAC4 soap_in_ns__HBNET_VIDEO_STREAM(struct soap*, const char*, struct ns__HBNET_VIDEO_STREAM *, const char*);

#ifndef soap_write_ns__HBNET_VIDEO_STREAM
#define soap_write_ns__HBNET_VIDEO_STREAM(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__HBNET_VIDEO_STREAM(soap, data), 0) || soap_put_ns__HBNET_VIDEO_STREAM(soap, data, "ns:HBNET-VIDEO-STREAM", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__HBNET_VIDEO_STREAM(struct soap*, const struct ns__HBNET_VIDEO_STREAM *, const char*, const char*);

#ifndef soap_read_ns__HBNET_VIDEO_STREAM
#define soap_read_ns__HBNET_VIDEO_STREAM(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__HBNET_VIDEO_STREAM(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM * SOAP_FMAC4 soap_get_ns__HBNET_VIDEO_STREAM(struct soap*, struct ns__HBNET_VIDEO_STREAM *, const char*, const char*);

#define soap_new_ns__HBNET_VIDEO_STREAM(soap, n) soap_instantiate_ns__HBNET_VIDEO_STREAM(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__HBNET_VIDEO_STREAM(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__HBNET_VIDEO_STREAM * SOAP_FMAC2 soap_instantiate_ns__HBNET_VIDEO_STREAM(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__HBNET_VIDEO_STREAM(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Response
#define SOAP_TYPE_ns__Response (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Response(struct soap*, struct ns__Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Response(struct soap*, const struct ns__Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Response(struct soap*, const char*, int, const struct ns__Response *, const char*);
SOAP_FMAC3 struct ns__Response * SOAP_FMAC4 soap_in_ns__Response(struct soap*, const char*, struct ns__Response *, const char*);

#ifndef soap_write_ns__Response
#define soap_write_ns__Response(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Response(soap, data), 0) || soap_put_ns__Response(soap, data, "ns:Response", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Response(struct soap*, const struct ns__Response *, const char*, const char*);

#ifndef soap_read_ns__Response
#define soap_read_ns__Response(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Response * SOAP_FMAC4 soap_get_ns__Response(struct soap*, struct ns__Response *, const char*, const char*);

#define soap_new_ns__Response(soap, n) soap_instantiate_ns__Response(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Response(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Response * SOAP_FMAC2 soap_instantiate_ns__Response(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTonsCXF__getDataCxfResponse
#define SOAP_TYPE_PointerTonsCXF__getDataCxfResponse (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTonsCXF__getDataCxfResponse(struct soap*, nsCXF__getDataCxfResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTonsCXF__getDataCxfResponse(struct soap*, const char *, int, nsCXF__getDataCxfResponse *const*, const char *);
SOAP_FMAC3 nsCXF__getDataCxfResponse ** SOAP_FMAC4 soap_in_PointerTonsCXF__getDataCxfResponse(struct soap*, const char*, nsCXF__getDataCxfResponse **, const char*);

#ifndef soap_write_PointerTonsCXF__getDataCxfResponse
#define soap_write_PointerTonsCXF__getDataCxfResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTonsCXF__getDataCxfResponse(soap, data), 0) || soap_put_PointerTonsCXF__getDataCxfResponse(soap, data, "nsCXF:getDataCxfResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTonsCXF__getDataCxfResponse(struct soap*, nsCXF__getDataCxfResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTonsCXF__getDataCxfResponse
#define soap_read_PointerTonsCXF__getDataCxfResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTonsCXF__getDataCxfResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 nsCXF__getDataCxfResponse ** SOAP_FMAC4 soap_get_PointerTonsCXF__getDataCxfResponse(struct soap*, nsCXF__getDataCxfResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTonsCXF__getDataCxf
#define SOAP_TYPE_PointerTonsCXF__getDataCxf (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTonsCXF__getDataCxf(struct soap*, nsCXF__getDataCxf *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTonsCXF__getDataCxf(struct soap*, const char *, int, nsCXF__getDataCxf *const*, const char *);
SOAP_FMAC3 nsCXF__getDataCxf ** SOAP_FMAC4 soap_in_PointerTonsCXF__getDataCxf(struct soap*, const char*, nsCXF__getDataCxf **, const char*);

#ifndef soap_write_PointerTonsCXF__getDataCxf
#define soap_write_PointerTonsCXF__getDataCxf(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTonsCXF__getDataCxf(soap, data), 0) || soap_put_PointerTonsCXF__getDataCxf(soap, data, "nsCXF:getDataCxf", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTonsCXF__getDataCxf(struct soap*, nsCXF__getDataCxf *const*, const char*, const char*);

#ifndef soap_read_PointerTonsCXF__getDataCxf
#define soap_read_PointerTonsCXF__getDataCxf(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTonsCXF__getDataCxf(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 nsCXF__getDataCxf ** SOAP_FMAC4 soap_get_PointerTonsCXF__getDataCxf(struct soap*, nsCXF__getDataCxf **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getDataResponse
#define SOAP_TYPE_PointerTo_ns1__getDataResponse (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getDataResponse(struct soap*, _ns1__getDataResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getDataResponse(struct soap*, const char *, int, _ns1__getDataResponse *const*, const char *);
SOAP_FMAC3 _ns1__getDataResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__getDataResponse(struct soap*, const char*, _ns1__getDataResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__getDataResponse
#define soap_write_PointerTo_ns1__getDataResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getDataResponse(soap, data), 0) || soap_put_PointerTo_ns1__getDataResponse(soap, data, "ns1:getDataResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getDataResponse(struct soap*, _ns1__getDataResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getDataResponse
#define soap_read_PointerTo_ns1__getDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getDataResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__getDataResponse(struct soap*, _ns1__getDataResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__getData
#define SOAP_TYPE_PointerTo_ns1__getData (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__getData(struct soap*, _ns1__getData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__getData(struct soap*, const char *, int, _ns1__getData *const*, const char *);
SOAP_FMAC3 _ns1__getData ** SOAP_FMAC4 soap_in_PointerTo_ns1__getData(struct soap*, const char*, _ns1__getData **, const char*);

#ifndef soap_write_PointerTo_ns1__getData
#define soap_write_PointerTo_ns1__getData(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__getData(soap, data), 0) || soap_put_PointerTo_ns1__getData(soap, data, "ns1:getData", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__getData(struct soap*, _ns1__getData *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__getData
#define soap_read_PointerTo_ns1__getData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__getData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__getData ** SOAP_FMAC4 soap_get_PointerTo_ns1__getData(struct soap*, _ns1__getData **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons__HBNET_RECOED_PLAYCTRL
#define SOAP_TYPE_PointerTons__HBNET_RECOED_PLAYCTRL (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__HBNET_RECOED_PLAYCTRL(struct soap*, struct ns__HBNET_RECOED_PLAYCTRL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__HBNET_RECOED_PLAYCTRL(struct soap*, const char *, int, struct ns__HBNET_RECOED_PLAYCTRL *const*, const char *);
SOAP_FMAC3 struct ns__HBNET_RECOED_PLAYCTRL ** SOAP_FMAC4 soap_in_PointerTons__HBNET_RECOED_PLAYCTRL(struct soap*, const char*, struct ns__HBNET_RECOED_PLAYCTRL **, const char*);

#ifndef soap_write_PointerTons__HBNET_RECOED_PLAYCTRL
#define soap_write_PointerTons__HBNET_RECOED_PLAYCTRL(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons__HBNET_RECOED_PLAYCTRL(soap, data), 0) || soap_put_PointerTons__HBNET_RECOED_PLAYCTRL(soap, data, "ns:HBNET-RECOED-PLAYCTRL", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__HBNET_RECOED_PLAYCTRL(struct soap*, struct ns__HBNET_RECOED_PLAYCTRL *const*, const char*, const char*);

#ifndef soap_read_PointerTons__HBNET_RECOED_PLAYCTRL
#define soap_read_PointerTons__HBNET_RECOED_PLAYCTRL(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__HBNET_RECOED_PLAYCTRL(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_RECOED_PLAYCTRL ** SOAP_FMAC4 soap_get_PointerTons__HBNET_RECOED_PLAYCTRL(struct soap*, struct ns__HBNET_RECOED_PLAYCTRL **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons__HBNET_VIDEO_STREAM_RESP
#define SOAP_TYPE_PointerTons__HBNET_VIDEO_STREAM_RESP (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__HBNET_VIDEO_STREAM_RESP(struct soap*, struct ns__HBNET_VIDEO_STREAM_RESP *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__HBNET_VIDEO_STREAM_RESP(struct soap*, const char *, int, struct ns__HBNET_VIDEO_STREAM_RESP *const*, const char *);
SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM_RESP ** SOAP_FMAC4 soap_in_PointerTons__HBNET_VIDEO_STREAM_RESP(struct soap*, const char*, struct ns__HBNET_VIDEO_STREAM_RESP **, const char*);

#ifndef soap_write_PointerTons__HBNET_VIDEO_STREAM_RESP
#define soap_write_PointerTons__HBNET_VIDEO_STREAM_RESP(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons__HBNET_VIDEO_STREAM_RESP(soap, data), 0) || soap_put_PointerTons__HBNET_VIDEO_STREAM_RESP(soap, data, "ns:HBNET-VIDEO-STREAM-RESP", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__HBNET_VIDEO_STREAM_RESP(struct soap*, struct ns__HBNET_VIDEO_STREAM_RESP *const*, const char*, const char*);

#ifndef soap_read_PointerTons__HBNET_VIDEO_STREAM_RESP
#define soap_read_PointerTons__HBNET_VIDEO_STREAM_RESP(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__HBNET_VIDEO_STREAM_RESP(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM_RESP ** SOAP_FMAC4 soap_get_PointerTons__HBNET_VIDEO_STREAM_RESP(struct soap*, struct ns__HBNET_VIDEO_STREAM_RESP **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons__HBNET_RECOED_FILECOND
#define SOAP_TYPE_PointerTons__HBNET_RECOED_FILECOND (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__HBNET_RECOED_FILECOND(struct soap*, struct ns__HBNET_RECOED_FILECOND *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__HBNET_RECOED_FILECOND(struct soap*, const char *, int, struct ns__HBNET_RECOED_FILECOND *const*, const char *);
SOAP_FMAC3 struct ns__HBNET_RECOED_FILECOND ** SOAP_FMAC4 soap_in_PointerTons__HBNET_RECOED_FILECOND(struct soap*, const char*, struct ns__HBNET_RECOED_FILECOND **, const char*);

#ifndef soap_write_PointerTons__HBNET_RECOED_FILECOND
#define soap_write_PointerTons__HBNET_RECOED_FILECOND(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons__HBNET_RECOED_FILECOND(soap, data), 0) || soap_put_PointerTons__HBNET_RECOED_FILECOND(soap, data, "ns:HBNET-RECOED-FILECOND", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__HBNET_RECOED_FILECOND(struct soap*, struct ns__HBNET_RECOED_FILECOND *const*, const char*, const char*);

#ifndef soap_read_PointerTons__HBNET_RECOED_FILECOND
#define soap_read_PointerTons__HBNET_RECOED_FILECOND(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__HBNET_RECOED_FILECOND(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_RECOED_FILECOND ** SOAP_FMAC4 soap_get_PointerTons__HBNET_RECOED_FILECOND(struct soap*, struct ns__HBNET_RECOED_FILECOND **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons__Response
#define SOAP_TYPE_PointerTons__Response (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__Response(struct soap*, struct ns__Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__Response(struct soap*, const char *, int, struct ns__Response *const*, const char *);
SOAP_FMAC3 struct ns__Response ** SOAP_FMAC4 soap_in_PointerTons__Response(struct soap*, const char*, struct ns__Response **, const char*);

#ifndef soap_write_PointerTons__Response
#define soap_write_PointerTons__Response(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons__Response(soap, data), 0) || soap_put_PointerTons__Response(soap, data, "ns:Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__Response(struct soap*, struct ns__Response *const*, const char*, const char*);

#ifndef soap_read_PointerTons__Response
#define soap_read_PointerTons__Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Response ** SOAP_FMAC4 soap_get_PointerTons__Response(struct soap*, struct ns__Response **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons__HBNET_CAMERA_PTZCTRL
#define SOAP_TYPE_PointerTons__HBNET_CAMERA_PTZCTRL (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__HBNET_CAMERA_PTZCTRL(struct soap*, struct ns__HBNET_CAMERA_PTZCTRL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__HBNET_CAMERA_PTZCTRL(struct soap*, const char *, int, struct ns__HBNET_CAMERA_PTZCTRL *const*, const char *);
SOAP_FMAC3 struct ns__HBNET_CAMERA_PTZCTRL ** SOAP_FMAC4 soap_in_PointerTons__HBNET_CAMERA_PTZCTRL(struct soap*, const char*, struct ns__HBNET_CAMERA_PTZCTRL **, const char*);

#ifndef soap_write_PointerTons__HBNET_CAMERA_PTZCTRL
#define soap_write_PointerTons__HBNET_CAMERA_PTZCTRL(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons__HBNET_CAMERA_PTZCTRL(soap, data), 0) || soap_put_PointerTons__HBNET_CAMERA_PTZCTRL(soap, data, "ns:HBNET-CAMERA-PTZCTRL", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__HBNET_CAMERA_PTZCTRL(struct soap*, struct ns__HBNET_CAMERA_PTZCTRL *const*, const char*, const char*);

#ifndef soap_read_PointerTons__HBNET_CAMERA_PTZCTRL
#define soap_read_PointerTons__HBNET_CAMERA_PTZCTRL(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__HBNET_CAMERA_PTZCTRL(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_CAMERA_PTZCTRL ** SOAP_FMAC4 soap_get_PointerTons__HBNET_CAMERA_PTZCTRL(struct soap*, struct ns__HBNET_CAMERA_PTZCTRL **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons__HBNET_VIDEO_STREAM
#define SOAP_TYPE_PointerTons__HBNET_VIDEO_STREAM (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__HBNET_VIDEO_STREAM(struct soap*, struct ns__HBNET_VIDEO_STREAM *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__HBNET_VIDEO_STREAM(struct soap*, const char *, int, struct ns__HBNET_VIDEO_STREAM *const*, const char *);
SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM ** SOAP_FMAC4 soap_in_PointerTons__HBNET_VIDEO_STREAM(struct soap*, const char*, struct ns__HBNET_VIDEO_STREAM **, const char*);

#ifndef soap_write_PointerTons__HBNET_VIDEO_STREAM
#define soap_write_PointerTons__HBNET_VIDEO_STREAM(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons__HBNET_VIDEO_STREAM(soap, data), 0) || soap_put_PointerTons__HBNET_VIDEO_STREAM(soap, data, "ns:HBNET-VIDEO-STREAM", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__HBNET_VIDEO_STREAM(struct soap*, struct ns__HBNET_VIDEO_STREAM *const*, const char*, const char*);

#ifndef soap_read_PointerTons__HBNET_VIDEO_STREAM
#define soap_read_PointerTons__HBNET_VIDEO_STREAM(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__HBNET_VIDEO_STREAM(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__HBNET_VIDEO_STREAM ** SOAP_FMAC4 soap_get_PointerTons__HBNET_VIDEO_STREAM(struct soap*, struct ns__HBNET_VIDEO_STREAM **, const char*, const char*);

/* _xsd__schema is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__xsd__schema
#define SOAP_TYPE__xsd__schema (8)
#endif

#define soap_default__xsd__schema(soap, a) soap_default_string(soap, a)


#define soap_serialize__xsd__schema(soap, a) soap_serialize_string(soap, a)


#define soap_out__xsd__schema soap_out_string


#define soap_in__xsd__schema soap_in_string


#ifndef soap_write__xsd__schema
#define soap_write__xsd__schema(soap, data) ( soap_begin_send(soap) || (soap_serialize__xsd__schema(soap, data), 0) || soap_put__xsd__schema(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


#define soap_put__xsd__schema soap_put_string


#ifndef soap_read__xsd__schema
#define soap_read__xsd__schema(soap, data) ( soap_begin_recv(soap) || !soap_get__xsd__schema(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif


#define soap_get__xsd__schema soap_get_string


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of BaseH.h */
